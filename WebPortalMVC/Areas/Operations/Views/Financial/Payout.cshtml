@using Domain.DTO.BaseDto;
@using Domain.Models.Components;
@using Manager.Commons.Enums
@model Domain.DTO.Operations.Financials.output.FinancialOutputDto;
@{
    ViewData["Title"] = "Financials";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link href="~/styles/operations/financial/payout.css" rel="stylesheet" type="text/css" />
<div class="financial-page">
    <div class="row">
        <div class="col-3">
            @Html.Partial("~/Views/Shared/components/InputComponent.cshtml", new InputComponentModel{
                id = "txt-search",
                group = "",
                placeholder = "Search",
                value = (ViewBag.ID == 0 ? "" : ViewBag.ID.ToString())
            })
        </div>
        <div class="col-2">
            <button class="btn btn-dark" id="btn-dist-search">Search</button>
        </div>
        @{
            var directRefs = Model.referals.Where(x => x.type == EarningsEnum.DIRECT_REFERAL.ToString()).ToList();
            var inDirectRefs = Model.referals.Where(x => x.type == EarningsEnum.INDIRECT_REFERAL.ToString()).ToList();
            decimal totalEarnings = 0;
            var currentUnilevelEarn = Model.unilevel.Where(x =>
                x.available_dt.Month == DateTime.Now.Month && x.available_dt.Year == DateTime.Now.Year);
            totalEarnings += directRefs.Sum(x => x.amount);
            totalEarnings += inDirectRefs.Sum(x => x.amount);
            totalEarnings += Model.pairings.Sum(x => x.earn_amount);
            totalEarnings += currentUnilevelEarn.Sum(x => x.amount);
        }
        @if (Model.details.ident != 0)
        {
            <div class="col-12">
                <br/>
                <hr/>
                <br/>
            </div>
            <div class="col-12" style="display: flex;">
                <div class="row dist-details" id="dist-details" > 
                    <div class="col-2">
                        @if(Model?.details.user_picture_base_64  == null || Model?.details.user_picture_base_64 == ""){
                            <img class="" id="dist-img" src="/assets/img/userimg.png" accept="image/*"/>
                        }else{
                            <img class="img-style" id="dist-img" src="@("data:image/jpg;base64,"+Model?.details.user_picture_base_64 ?? "")" />
                        } 
                    </div>
                    <div class="col-10">
                        @await Html.PartialAsync("~/Views/Shared/components/InputComponent.cshtml", new InputComponentModel
                               {
                                   id = "fullname",
                                   group = "",
                                   placeholder = "Full Name",
                                   input_style = "background-color: #f1f1f1;",
                                   attributes = "disabled",
                                   value = $"{Model.details.first_name} {Model.details.last_name}"
                               })
                        @await Html.PartialAsync("~/Views/Shared/components/InputComponent.cshtml", new InputComponentModel
                               {
                                   id = "id-number",
                                   group = "",
                                   placeholder = "Distributor ID",
                                   input_style = "background-color: #f1f1f1;",
                                   attributes = "disabled",
                                   value = Model.details.ident.ToString()
                               })
                        @await Html.PartialAsync("~/Views/Shared/components/InputComponent.cshtml", new InputComponentModel
                               {
                                   id = "gender",
                                   group = "",
                                   placeholder = "Gender",
                                   input_style = "background-color: #f1f1f1;",
                                   attributes = "disabled",
                                   value = Model.details.gender
                               })
                        @await Html.PartialAsync("~/Views/Shared/components/InputComponent.cshtml", new InputComponentModel
                               {
                                   id = "address",
                                   group = "",
                                   placeholder = "Complete Address",
                                   input_style = "background-color: #f1f1f1;",
                                   attributes = "disabled",
                                   value = Model.details.complete_address
                               })
                        @await Html.PartialAsync("~/Views/Shared/components/InputComponent.cshtml", new InputComponentModel
                               {
                                   type = "date",
                                   id = "birth-date",
                                   group = "",
                                   placeholder = "Birth Date",
                                   input_style = "background-color: #f1f1f1;",
                                   attributes = "disabled",
                                   value = Model.details.birth_date.ToString("yyyy-MM-dd")
                               })
                    </div>
                </div>
                <div class="total-details">
                    <table class="table table-bordered">
                        <thead>
                        <tr>
                            <th>Earnings Breakdown</th>
                            <th></th>
                            <th></th>
                            <th></th>
                        </tr>
                        </thead>
                        <tbody>
                        <tr>
                            <td>DIRECT REFERAL</td>
                            <td>₱ @( directRefs.FirstOrDefault() != null ? directRefs.FirstOrDefault().amount.ToString("N") : "0.00")</td>
                            <td>@directRefs.Count()</td>
                            <td>₱ @(directRefs.Sum(x => x.amount).ToString("N"))</td>
                        </tr>
                        <tr>
                            <td>INDIRECT REFERAL</td>
                            <td>₱ @(inDirectRefs.FirstOrDefault() != null ? inDirectRefs.FirstOrDefault().amount.ToString("N") : "0.00")</td>
                            <td>@inDirectRefs.Count()</td>
                            <td>₱ @(inDirectRefs.Sum(x => x.amount).ToString("N"))</td>
                        </tr>
                        <tr>
                            <td>PAIRING BONUS</td>
                            <td>₱ @(Model.pairings.FirstOrDefault() != null ? Model.pairings.FirstOrDefault().earn_amount.ToString("N") : "0.00")</td>
                            <td>@Model.pairings.Count()</td>
                            <td>₱ @(Model.pairings.Sum(x => x.earn_amount).ToString("N"))</td>
                        </tr>
                        <tr>
                            <td>UNILEVEL</td>
                            <td>--</td>
                            <td>@currentUnilevelEarn.Count()</td>
                            <td>₱ @currentUnilevelEarn.Sum(x => x.amount).ToString("N")</td>
                        </tr>
                        <tr>
                            <td></td>
                            <td></td>
                            <td class="bg-dark text-white">TOTAL</td>
                            <td class="bg-dark text-white">₱ @totalEarnings.ToString("N")</td>
                        </tr>
                        </tbody>
                    </table> 
                    <button class="btn btn-primary w-50" id="btn-process" style="display: flex;margin-left: auto;"> 
                        <span class="material-symbols-sharp" style="margin-right: auto;">
                            payments
                        </span>Distributor Process Payout
                    </button>
                </div>
            </div>  
        }
    </div>
</div>
<br/>
@if(Model.details.ident != 0){
<div class="financial-page">
    <div class="row">
        <div class="col-12">
            <h2>Direct & Indirect Referals</h2>
            <hr/>
            <div class="table-container">
                <table class="table table-striped table-bordered">
                    <thead>
                    <tr>
                        <th>Date Time</th>
                        <th>Type</th>
                        <th>Beneficiary</th>
                        <th>From</th>
                        <th>Amount</th>
                        <th>Payment Status</th>
                        <th>Encash Request</th>
                    </tr>
                    </thead>
                    <tbody>
                    @foreach (var rf in Model.referals)
                    {
                        <tr>
                            <td>@rf.created_dt.ToString("MM/dd/yyyy hh:mm tt")</td>
                            <td>@rf.type.Replace("_"," ")</td>
                            <td>@rf.dist_details?.first_name @rf.dist_details?.last_name</td>
                            <td>@rf.from_dist_details?.first_name @rf.from_dist_details?.last_name</td>
                            <td>₱ @rf.amount.ToString("N2")</td>
                            <td>@(rf.is_paid ? "PAID" : "PENDING")</td>
                            <td>n/a</td>
                        </tr>
                    } 
                    </tbody>
                </table>
            </div>
        </div> 
    </div>
</div>
<br/>
<div class="financial-page">
    <div class="row"> 
        <div class="col-12">
            <h2>Pairing Bonus</h2>
            <hr/>
            <div class="table-container">
                <table class="table table-striped table-bordered">
                    <thead>
                    <tr>
                        <th>Date Time</th> 
                        <th>Beneficiary</th>
                        <th>LEFT</th>
                        <th>RIGHT</th>
                        <th>Amount</th>
                        <th>Payment Status</th>
                    </tr>
                    </thead>
                    <tbody> 
                    @foreach (var pb in Model.pairings)
                    {
                        <tr>
                            <td>@pb.dt_created.ToString("MM/dd/yyyy hh:mm tt")</td> 
                            <td>@pb.ben_dist_details?.first_name @pb.ben_dist_details?.last_name</td>
                            <td>@pb.right_dist_details?.first_name @pb.right_dist_details?.last_name</td>
                            <td>@pb.left_dist_details?.first_name @pb.left_dist_details?.last_name</td>
                            <td>₱ @pb.earn_amount.ToString("N2")</td>
                            <td>@(pb.is_paid ? "PAID" : "PENDING")</td>
                        </tr>
                    }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
<br/>
<div class="financial-page">
    <div class="row"> 
        <div class="col-12">
            <h2>Uni-Level Current Earnings</h2>
            <hr/>
            <div class="table-container">
                <table class="table table-striped table-bordered">
                    <thead>
                    <tr>
                        <th>Date Time</th>
                        <th>Availability</th>
                        <th>Beneficiary</th>
                        <th>Purchase By</th>
                        <th>Transaction #</th> 
                        <th>Amount</th>
                        <th>Payment Status</th>
                    </tr>
                    </thead>
                    <tbody> 
                    @foreach (var ul in currentUnilevelEarn)
                    {
                        <tr>
                            <td>@ul.created_dt.ToString("MM/dd/yyyy hh:mm tt")</td>
                            <td>@ul.available_dt.ToString("MM/dd/yyyy hh:mm tt")</td> 
                            <td>@ul.dist_details.first_name @ul.dist_details.last_name</td>
                            <td>n/a</td>
                            <td>@ul.transact_ident</td>
                            <td>₱ @ul.amount.ToString("N2")</td>
                            <td>@(ul.is_paid ? "PAID" : "PENDING")</td>
                        </tr>
                    }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
<br/>
<div class="financial-page">
    <div class="row"> 
        <div class="col-12">
            @{
                DateTime dateNextMonth = DateTime.Now.AddMonths(1);
            }
            <h2>Uni-Level Earnings next month (@dateNextMonth.ToString("MMMM yyyy"))</h2>
            <hr/>
            <div class="table-container">
                <table class="table table-striped table-bordered">
                    <thead>
                    <tr>
                        <th>Date Time</th>
                        <th>Availability</th>
                        <th>Beneficiary</th>
                        <th>Purchase By</th>
                        <th>Transaction #</th> 
                        <th>Amount</th>
                        <th>Payment Status</th>
                    </tr>
                    </thead>
                    <tbody>
                    @foreach (var ul in Model.unilevel.Where(x =>
                        x.available_dt.Month == dateNextMonth.Month && x.available_dt.Year == dateNextMonth.Year))
                    {
                        <tr>
                            <td>@ul.created_dt.ToString("MM/dd/yyyy hh:mm tt")</td>
                            <td>@ul.available_dt.ToString("MM/dd/yyyy hh:mm tt")</td>
                            <td>@ul.dist_details.first_name @ul.dist_details.last_name</td>
                            <td>n/a</td>
                            <td>@ul.transact_ident</td>
                            <td>₱ @ul.amount.ToString("N2")</td>
                            <td>@(ul.is_paid ? "PAID" : "PENDING")</td>
                        </tr>
                    }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
}
<form action="javascript:void(0);" id="form-encode-details">
    @Html.AntiForgeryToken()
</form>
<script>
    $(document).ready(function () { 
        authenticateOperationsPage(() => {
            
        });
        BreadCrumbData([
            {
                title: "Financials",
                url: "@(Url.Content($"~/Operations/Financial/"))"
            }, {
                title: "Earnings",
                url: "@(Url.Content($"~/Operations/Financial/"))"
            }
        ])
    }); 
    
    $("#btn-dist-search").on('click', () => {
        window.location.href = "/Operations"+"@Url.Action("Payout")?id=" + $("#txt-search").val();
    });
    
    $("#txt-search").on('keypress', (event) => {
        if (event.which === 13) { // 13 represents the Enter key
          var inputValue = $("#txt-search").val(); // Get the value of the input field
          // Perform your action here with the inputValue 
          window.location.href = "/Operations"+"@Url.Action("Payout")?id=" + inputValue;
        }
    });
    
    $("#btn-process").on('click', function (){
        showDialogBoxMultiButtons({
            title: "Process Payout Distributor",
            body: `Are you sure you want to process the payout for this distributor?`,
            buttons: [
                `<button class="btn btn-secondary" onclick="closeDialogBoxMultiButtons()">No</button>`,
                `<button class="btn btn-primary" onclick="processPayout()">Yes</button>`
            ],
            visibility: true
        });
    });
    
    
    function processPayout(){
        closeDialogBoxMultiButtons();
        SHILoadingStart();
        var form = $('#form-encode-details');
        var token = $('input[name="__RequestVerificationToken"]', form).val();
        var form_Data = new FormData();
        form_Data.append("__RequestVerificationToken", token); 
        form_Data.append("distributor_ident", "@ViewBag.ID");
        
        $.ajax({
            url: "/Operations" + "@Url.Action("ProcessPayout","Financial")",
            type: "POST",
            data: form_Data,
            contentType: false,
            processData: false,
            beforeSend: function(xhr) {
                xhr.setRequestHeader('Authorization', 'Bearer ' + getToken());
            },
            success: function (data){
                showDialog(() =>{
                    window.location.href = "/Operations" + "@Url.Action("Search")?id=@ViewBag.ID";
                },"SUCCESS","Payout", "Successfully process distributors payout");
                SHILoadingStop(); 
            },
            error: function (response){ 
                const { status, responseText } = response;
                if(status === 400){
                    showDialog(() =>{
                    },"DANGER","Payout", responseText)
                    SHILoadingStop();
                }else if (status === 401){
                   refreshToken(() => {
                       processPayout();
                   });
                }else{
                    SHILoadingStop();
                }
            }
        })
    }
    
    function getFinancialDetails(){
        SHILoadingStart();
        // $.ajax({
        //     url: urlString,
        //     type: "GET",
        //     beforeSend: function(xhr) {
        //         xhr.setRequestHeader('Authorization', 'Bearer ' + getToken());
        //     },
        //     success: function (data){
        //         let {level_list, max_level} = data; 
        //         generateBinaryTreeUI(level_list, max_level);
        //     },
        //     error: function (response){ 
        //         const { status, responseText } = response;
        //         if(status === 400){
        //             showDialog(() =>{
        //             },"DANGER","Products", responseText)
        //             SHILoadingStop();
        //         }else if (status === 401){
        //            refreshToken(() => {
        //                getBinaryDetails();
        //            });
        //         }else{
        //             SHILoadingStop();
        //         }
        //     }
        // })
    }
</script>